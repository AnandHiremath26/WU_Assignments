package retrieve;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class RetrieveLinls {

	public static void main(String[] args) {

		 // Make sure you have the ChromeDriver executable and set its path
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");

        // Initialize ChromeDriver
        WebDriver driver = new ChromeDriver();

        // Navigate to the URL
        driver.get("https://www.flipkart.com/");

        // 1. Using traditional for-each loop
        System.out.println("Using for-each loop:");
        List<WebElement> links = driver.findElements(By.tagName("a"));
        for (WebElement link : links) {
            System.out.println(link.getAttribute("href"));
        }

        // 2. Using Stream
        System.out.println("\nUsing Stream:");
       // driver.findElements(By.tagName("a"))
        links .stream()
                .map(WebElement::getAttribute)
                .forEach(System.out::println);

        // 3. Using Parallel Stream
        System.out.println("\nUsing Parallel Stream:");
        driver.findElements(By.tagName("a"))
                .parallelStream()
                .map(WebElement::getAttribute)
                .forEach(System.out::println);

        // 4. Using Lambda Expression
        System.out.println("\nUsing Lambda Expression:");
        driver.findElements(By.tagName("a"))
                .forEach(link -> System.out.println(link.getAttribute("href")));

        // Close the browser
        driver.quit();
	}

}
